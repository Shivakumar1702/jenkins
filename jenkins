CI/CD provides the ready to deploy code.
CI(continous integration) - A sw practice of integrate the work frequently. continous merge and unit test.
CD(continous delivery) - A ready build which is available to deploy to end user at anytime.
CD(continous deployment) - automated way of deploying the code when it passes the required tests.

Jenkins - open source tool for continuous integration. - used for build, test and deploy the software. - notify the users.

Jenkins Architecture - - jenkins follow master slave architecture. - master node works like controller. - slave/worker node will work as execution node. - single master node will have multiple worker nodes. - jenkins UI is only available for master node. - jenkins master takes care of load distribution. - java and a jar file from master is required on the slave node, no separate jenkins installation needed. - slave and master nodes can be of different OS.

Master Node - schedule the job --> sends the job to slave for execution --> monitor slave and record the result
Slave Node - Execute the build dispatched by master

Jenkins job - runnable task that is controlled by Jenkins.
Types of Jobs -
Freestyle project - executing shell or bash commands
pipeline - these are projects are used to called a workflow. These are written in DSL
Multiconfiguration Project - for projects which are tested on multiple environments, and require environment specific configuration.

Build triggers -
poll SCM - jenkins checks the status of the repository, if the jenkins finds any changes it builds the repo. the time when the jenkins should check the repo should be mentioned in cron way.
Build after other projects are built - the build gets triggered post other project/job gets completed.
Build periodically - repo gets build based on the interval mentioned.
Triggers build remotely - execute the build through a URL, the URL contains the authentication token, URL can be integrated in script, API or UI click button.
Github hook for SCM polling - whenever a change is made in the repo build gets triggered.

tomcat installation - https://www.vultr.com/docs/install-apache-tomcat-on-ubuntu-20-04-39123/?utm_source=performance-max-apac&utm_medium=paidmedia&obility_id=16876059738&utm_adgroup=&utm_campaign=&utm_term=&utm_content=&gclid=Cj0KCQjwk7ugBhDIARIsAGuvgPaOV68Mr11MNYfsPAdvi9JOoERM-PfwgoJ9AdMvzPsBpPgkkdEojgsaAoEyEALw_wcB

maven commands -
mvn archtype:generate --> (An archetype which contains a sample Maven Webapp project.)
mvn validate
mvn compile
mvn test
mvn package
mvn install
mvn deploy
mvn clean

conf/tomcat-users.xml --
<role rolename="manager-script"/>
<role rolename="manager-gui"/>
<user username="tomcat" password="tomcat" roles="manager-script,manager-gui"/>

server.xml --> edit this for changing tomcat default port

Archive - saving/archiving the build output files outside of the workspace.
If file is not archived the files are lost when delete worksapce is done.
Post build actions - Archive the artifacts.
build other projects(manual step)
Copy Artifacts - to copy the artifact which is archived in a different job
Deploy to container - deploy war/ear file
build pipeline plugin - to show to upstream and downstream jobs.

Code pipeline --
Jobs can be created with the code instead of UI.
Jenkins Job DSL plugin is used to create files.
jenkins code pipeline uses DSL

Seed Job --
Normal free style project which when runs creates DSL Job using Job DSL.

Jenkinsfile --
Jenkins file contains all the steps for executing a workflow as code which will be checked into SCM.
tags in pipeline.
pipeline - main block which contains all the stages
node - which slave the pipeline should execute on
agent - excutor on the node
stages - there can be more than one stage inside stages block.
steps - series of actions which are mentioned inside the stage block.

distributed builds --
Jenkins has a master slave architecture. one master can have many slaves which execute builds. This is known as jenkins distributed build.
Slave nodes can be of any operating system. This helps in executing test cases over different OS.

Executor --
basic building block which runs the build on slave or master.
no of executors specify the max no of builds that can be done concurrently.
1 core CPU should ideally have 2 Executors.

Global Environment variables in Jenkins - https://www.jenkins.io/doc/book/pipeline/jenkinsfile/
To define custome environment variables - Jenkins dashboard --> manage jenkins --> system --> environment variables

Multibranch pipeline --
create a pipeline for each of the branches in the repository
